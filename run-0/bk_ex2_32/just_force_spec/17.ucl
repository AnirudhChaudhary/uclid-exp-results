module CommunicationProtocol {
  type Channel = bv4;

  var ControlBit: bv1;
  var Message: real;
  var c: Channel;
  var d: Channel;

  instance S: Sender(c:(c), d:(d), m:(Message));
  instance R: Receiver(b:(ControlBit), c:(c));

}
module Sender {
  type Channel = bv4;

  var b: bv1;

  input c: Channel;
  input d: Channel;
  input m: ??;

  next {
    if (m != m) {
      b' = m[0]; //107
    }

  }
}
module Receiver {
  type Channel = bv4;
  type Bit = bv6;

  var d: bv6;

  input c: Channel;
  input b: Bit;

  next {
    if (b == b) {
      d' = b; //160
    }

  }
  invariant c_inv : true;
  invariant d_inv : true;
  invariant S_inv : true;
  invariant R_inv : true;
  invariant m_inv : true;
  invariant b_inv : true;

  control  {
    v = bmc(3);
    check;
    print_results;
    v.print_cex();
  }
}
