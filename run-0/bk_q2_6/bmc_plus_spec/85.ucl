module Stack {
  var Int: boolean;
  var i: integer;
  var n: integer;
  var top: integer;
  var s: [integer]boolean;
  var push: boolean;
  var pop: boolean;

  init {
    n = 3; //46
    top = 0; //50

  }
  next {
    if (pop && (top > 0)) {
      if (push && (top < n)) {
        if (push) {
          s' = s[top -> true]; //82
          top' = (top + 1); //89
        } else {
          top' = (top - 1); //97
          s' = s[top -> false]; //105
        }
      }
    }

  }
  invariant n_inv : Int;
  invariant top_inv : ((top >= 0) && (top <= n));
  invariant inv : ((top > 0) ==> (i < top));
  invariant s_inv : (forall (i0:integer) :: (((i0 >= 0) && (i0 < top)) ==> (s[i0] == (i0 < top))));
  invariant push_inv : (push ==> (top < n));
  invariant pop_inv : (pop ==> (top > 0));

  control  {
    v = bmc(3);
    check;
    print_results;
    v.print_cex();
  }
}
