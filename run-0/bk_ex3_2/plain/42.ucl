module Module {
  var chopstick1: boolean;
  var chopstick1_next: boolean;
  var chopstick2: boolean;
  var chopstick2_next: boolean;
  var chopstick3: boolean;
  var chopstick3_next: boolean;
  var chopstick4: boolean;
  var chopstick4_next: boolean;
  var chopstick5: boolean;
  var chopstick5_next: boolean;
  var phil1: boolean;
  var phil1_next: boolean;
  var phil2: boolean;
  var phil2_next: boolean;
  var phil3: boolean;
  var phil3_next: boolean;
  var phil4: boolean;
  var phil4_next: boolean;
  var phil5: boolean;
  var phil5_next: boolean;

  next {
    phil1_next' = (chopstick1 && (!phil1 && chopstick5)); //103
    phil2_next' = (chopstick2 && (!phil2 && chopstick1)); //115
    phil3_next' = (chopstick3 && (!phil3 && chopstick2)); //127
    phil4_next' = (chopstick4 && (!phil4 && chopstick3)); //139
    phil5_next' = (chopstick5 && (!phil5 && chopstick4)); //151
    chopstick1_next' = ((phil1 && phil2) || (phil5 && phil1)); //165
    chopstick2_next' = ((phil2 && phil3) || (phil1 && phil2)); //179
    chopstick3_next' = ((phil3 && phil4) || (phil2 && phil3)); //193
    chopstick4_next' = ((phil4 && phil5) || (phil3 && phil4)); //207
    chopstick5_next' = ((phil5 && phil1) || (phil4 && phil5)); //221

  }
  invariant spec: !(phil5 && (phil4 && (phil3 && (phil1 && phil2))));
  control  {
    v = bmc(3);
    check;
    print_results;
    v.print_cex();
  }
}
