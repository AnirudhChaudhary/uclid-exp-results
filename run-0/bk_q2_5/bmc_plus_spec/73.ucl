module MutualExclusionProtocol {
  var l1_0: boolean;
  var l1_1: boolean;
  var l2_0: boolean;
  var l2_1: boolean;
  var l4_0: boolean;
  var l4_1: boolean;
  var l5_0: boolean;
  var l5_1: boolean;
  var s: boolean;
  var y0: boolean;
  var y1: boolean;

  init {
    s = true; //58
    y0 = false; //62
    y1 = false; //66

  }
  next {
    l1_0' = ((y1 == false) && (l2_1 == s)); //83
    l1_1' = (if (l1_0) then y1 else y0); //93
    l2_0' = l1_0; //98
    l2_1' = l1_1; //103
    l4_0' = ((l2_1 == false) && (s == l2_0)); //118
    l4_1' = (if (l4_0) then l2_1 else l4_1); //128
    l5_0' = l4_0; //133
    l5_1' = l4_1; //138

  }
  invariant s_inv : ((s == false) || (s == true));
  invariant y0_inv : ((y0 == false) || (y0 == true));
  invariant y1_inv : ((y1 == false) || (y1 == true));
  invariant l1_0_inv : ((l1_0 == true) || (l1_0 == false));
  invariant l1_1_inv : ((l1_1 == true) || (l1_1 == false));
  invariant l2_0_inv : ((l2_0 == true) || (l2_0 == false));
  invariant l2_1_inv : ((l2_1 == true) || (l2_1 == false));
  invariant l4_0_inv : ((l4_0 == true) || (l4_0 == false));
  invariant l4_1_inv : ((l4_1 == true) || (l4_1 == false));
  invariant l5_0_inv : ((l5_0 == true) || (l5_0 == false));
  invariant l5_1_inv : ((l5_1 == true) || (l5_1 == false));

  control  {
    v = bmc(3);
    check;
    print_results;
    v.print_cex();
  }
}
