/*
Model a state machine describing a traffic light at a pedestrian crosswalk. This is a time triggered machine that assumes it will react once per second. It starts in the red state and counts 60 seconds with the help of the variable count. It then transitions to green, where it will remain until the pure input pedestrian is present. That input is generated by a pedestrian pushing a button to request a walk light. When pedestrian is present, the machine transitions to yellow if it has been in state green for at least 60 seconds. Otherwise, it transitions to pending, where it stays for the remainder of the 60 second interval. This ensures that once the light goes green, it stays green for at least 60 seconds. At the end of 60 seconds, it will transition to yellow, where it will remain for 5 seconds before transitioning back to red.

The outputs produced by this machine are sigG to turn on the green light, sigY to change the light to yellow, and sigR to change the light to red.

Use the variable names sigG, sigY, sigR, pedestrian and count.
*/

module TrafficLight {
  var count: integer;
  var sigG: boolean;
  var sigR: boolean;
  var sigY: boolean;
  var state: integer;
  var pedestrian: boolean;

  init {
    state = 0; 
    count = 0; 
    sigG = false; 
    sigY = false; 
    sigR = true; 

  }
  procedure step()
    modifies sigG;
    modifies state;
    modifies sigR;
    modifies count;
    modifies sigY;
  {
    if (state == 0) {
      sigG = false; 
      sigY = false; 
      sigR = true; 
      count = (count + 1); 
      if (count == 60) {
        state = 1; 
        count = 0; 
      }
    } else {
      if (state == 1) {
        sigG = true; 
        sigY = false; 
        sigR = false; 
        if (pedestrian && (count >= 60)) {
          state = 2; 
          count = 0; 
        } else {
          count = (count + 1); 
        }
      } else {
        if (state == 2) {
          sigG = false; 
          sigY = false; 
          sigR = false; 
          count = (count + 1); 
          if (count == 60) {
            state = 3; 
            count = 0; 
          }
        } else {
          if (state == 3) {
            sigG = false; 
            sigY = true; 
            sigR = false; 
            count = (count + 1); 
            if (count == 5) {
              state = 0; 
              count = 0; 
            }
          }
        }
      }
    }
  }

  next {
    call step();
  }
}
