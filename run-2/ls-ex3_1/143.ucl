/*
Model a system that counts the number of cars that enter and leave a parking garage in order to keep track of how many cars are in the garage at any time.

Assume that an ArrivalDetector actor produces an event when a car arrives, and a DepartureDetector actor produces an event when a car departs. The Counter actor keeps a running count, starting from an initial value i. Each time the count changes, it produces an output event that updates a display.

Use the variable names arrival, departure and counter
*/

module ArrivalDetector {
  var arrived: bv2;

  next {
    arrived' = (arrived + 1bv2); 

  }
}
module DepartureDetector {
  var departed: bv3;

  next {
    departed' = (departed + 1bv3); 

  }
}
module String {
  var text: bv8;

}
module DisplayUpdater {
  var display_text: bv8;

}
module Counter {
  var count: bv8;

}
module Module {
  instance arrival: ArrivalDetector();
  instance departure: DepartureDetector();
  instance display: String();
  instance display_updater: DisplayUpdater();
  instance counter: Counter();

  next {
    if arrival.arrived {
      counter.count' = (counter.count + 1bv8); 
    }
    if departure.departed {
      counter.count' = (counter.count - 1bv8); 
    }
    display_updater.display_text' = counter.count; 

  }
}
