/*
Model a system that counts the number of cars that enter and leave a parking garage in order to keep track of how many cars are in the garage at any time.

Assume that an ArrivalDetector actor produces an event when a car arrives, and a DepartureDetector actor produces an event when a car departs. The Counter actor keeps a running count, starting from an initial value i. Each time the count changes, it produces an output event that updates a display.

Use the variable names arrival, departure and counter
*/

module ParkingCounter {
  var arrival: boolean;
  var counter: integer;
  var departure: boolean;

  init {
    counter = 0; //26

  }
  procedure step()
    modifies counter;
  {
    if (arrival) {
      counter = (counter + 1); //38
    }
    if (departure) {
      if (counter > 0) {
        counter = (counter - 1); //56
      }
    }
  }

  next {
    call step();
  }
  invariant counter_inv : (counter >= 0);
  invariant arrival_inv : true;
  invariant departure_inv : (!departure || (counter > 0));

  control  {
    v = bmc(3);
    check;
    print_results;
    v.print_cex();
  }
}
